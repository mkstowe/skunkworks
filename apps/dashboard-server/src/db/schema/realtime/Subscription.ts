// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type { default as UserDefinedFilter } from './UserDefinedFilter';
import type { ColumnType, Selectable, Insertable, Updateable } from 'kysely';

/** Identifier type for realtime.subscription */
export type SubscriptionId = string & { __brand: 'SubscriptionId' };

/** Represents the table realtime.subscription */
export default interface SubscriptionTable {
  id: ColumnType<SubscriptionId, never, never>;

  subscription_id: ColumnType<string, string, string>;

  entity: ColumnType<unknown, unknown, unknown>;

  filters: ColumnType<UserDefinedFilter[], UserDefinedFilter[] | undefined, UserDefinedFilter[]>;

  claims: ColumnType<unknown, unknown, unknown>;

  claims_role: ColumnType<unknown, never, never>;

  created_at: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type Subscription = Selectable<SubscriptionTable>;

export type NewSubscription = Insertable<SubscriptionTable>;

export type SubscriptionUpdate = Updateable<SubscriptionTable>;
