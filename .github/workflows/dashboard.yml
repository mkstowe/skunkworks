name: Deploy Dashboard App

on:
  push:
    branches:
      - main
    paths:
      - 'apps/dashboard/**'
      - 'apps/dashboard-server/**'
      - 'apps/dashboard/Dockerfile'
      - 'apps/dashboard-server/Dockerfile'
      - 'docker-compose.yml'
      - '.github/workflows/dashboard.yml'

  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Docker Host
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install

      - name: Debug file presence
        run: |
          echo "==> apps/dashboard/"
          ls -lh apps/dashboard
          echo "==> apps/dashboard-server/"
          ls -lh apps/dashboard-server
          echo "==> docker-compose.yml"
          ls -l docker-compose.yml

      - name: Create deployment tarball
        run: |
          tar -czf deploy.tar.gz \
            apps/dashboard/Dockerfile \
            apps/dashboard-server/Dockerfile \
            docker-compose.yml

      - name: Copy tarball to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: deploy.tar.gz
          target: ${{ secrets.DEPLOY_PATH }}
          strip_components: 0
          overwrite: true
          rm: true
          debug: true

      - name: Extract and restart Docker containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            docker compose down
            docker compose up --build -d
